{"version":3,"sources":["App/titles/index.tsx","App/context/default/index.ts","App/context/index.ts","App/visualizations/styles/index.ts","App/visualizations/gdp/index.tsx","App/visualizations/per-capita/index.tsx","App/visualizations/gdp-growth/index.tsx","App/visualizations/per-capita-growth/index.tsx","App/visualizations/time-to-middle-income/index.tsx","App/visualizations/middle-income/index.tsx","App/visualizations/index.tsx","App/data-form/index.tsx","App/index.tsx","serviceWorker.js","index.tsx"],"names":["Titles","react_default","a","createElement","Typography_default","variant","defaultContext","gdp","value","growthRate","population","target","label","perCapitaValue","React","createContext","Provider","Consumer","visualizations_styles","imageURL","card","display","flex-direction","margin","background-color","background","concat","background-size","content","text-align","flex-grow","justify-content","min-width","text","color","withStyles","styles","_ref","classes","_ref2","billions","index_es","className","elevation","Number","toFixed","gdppc","growingBillions","growth","toPrecision","style","justifyContent","alignItems","component","whiteSpace","newGDP","newPopulation","perCapita","changeInPerCapita","perCapitaGrowth","perCapitaGrowthRate","yearsToMiddleIncome","Math","log","Visualizations","react","visualizations_gdp","per_capita","gdp_growth","per_capita_growth","middle_income","time_to_middle_income","theme","textField","spacing","unit","width","formGroup","flex-wrap","setData","data","update","title","TextField_default","type","id","InputProps","endAdornment","position","startAdornment","onChange","e","Object","objectSpread","createMuiTheme","typography","useNextVariants","palette","secondary","main","yellow","withState","titles","visualizations","data_form","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.16ce5f95.chunk.js","sourcesContent":["import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nconst Titles = () => {\n  return <Typography variant=\"h6\" />;\n};\n\nexport default Titles;\n","export interface ContextType {\n  gdp: {\n    value: number;\n    growthRate: number;\n  };\n  population: {\n    value: number;\n    growthRate: number;\n  };\n  target: {\n    label: string;\n    perCapitaValue: number;\n  };\n  [key: string]: object;\n}\nexport const defaultContext: ContextType = {\n  gdp: {\n    value: 34e9,\n    growthRate: 0.063,\n  },\n  population: {\n    value: 42.86e6,\n    growthRate: 0.033,\n  },\n  target: {\n    label: 'Lower Middle Income',\n    perCapitaValue: 1025,\n  },\n};\n","import React from 'react';\nimport { defaultContext } from './default';\n\nexport const { Provider, Consumer } = React.createContext(defaultContext);\n","\nexport interface ClassNames {\n  content:string;\n  card:string;\n  text:string;\n}\n\nexport default  (imageURL?:string) => {\n  const style = {\n    card: {\n      display: 'inline-flex',\n      'flex-direction': 'column',\n      margin: 4,\n      'background-color':'#000000',\n      background:`url('${imageURL}')`,\n      'background-size':'cover',\n      // 'width':'fit-content',\n    },\n    content: {\n      display: 'flex',\n      'text-align': 'center',\n      'flex-direction': 'column',\n      'flex-grow': '1',\n      'justify-content': 'space-between',\n      'background-color': 'rgba(12, 14, 88, 0.71)',\n      'min-width':'fit-content',\n    },\n    text:{\n      color:'white',\n    },\n  };\n\n  return style;\n};\n","import React from 'react';\nimport { Consumer } from '../../context';\nimport { Typography, Card, CardContent, CardHeader, withStyles } from '@material-ui/core';\nimport styles, { ClassNames } from '../styles';\n\nconst GDP = ({ classes }:{classes:ClassNames}) => {\n  return (\n    <Consumer>\n      {\n        ({ gdp }) => {\n          const billions = gdp.value / 1e9;\n          return (\n            <Card className={classes.card} elevation={2} >\n              <CardContent className={classes.content} >\n                <Typography className={classes.text} variant=\"h6\" >\n                  Uganda Produces\n                </Typography>\n                <Typography color=\"secondary\" variant=\"h1\" >\n                ${Number(billions.toFixed(1))}\n                </Typography>\n                <Typography color=\"secondary\" variant=\"h3\" >\n                  Billion\n                </Typography>\n                <Typography className={classes.text} variant=\"h6\" >\n                  In Goods and Services a Year\n                </Typography>\n              </CardContent>\n            </Card>\n          );\n        }\n      }\n    </Consumer>\n  );\n};\n\nexport default withStyles(styles('images/gdp.jpg'))(GDP);\n","import React from 'react';\nimport { Consumer } from '../../context';\nimport { Typography, Card, CardContent, CardHeader, withStyles } from '@material-ui/core';\nimport styles, { ClassNames } from '../styles';\n\nconst GDPPerCapita = ({ classes }:{classes:ClassNames}) => {\n  return (\n    <Consumer>\n      {\n        ({ gdp, population }) => {\n          const billions = gdp.value / 1e9;\n          const gdppc = gdp.value / population.value;\n          return (\n            <Card  className={classes.card} elevation={2} >\n              <CardContent className={classes.content} >\n                <Typography className={classes.text} variant=\"h6\" >\n                  The Average Ugandan is Producing\n                </Typography>\n                <Typography color=\"secondary\" variant=\"h1\" >\n                ${Number(gdppc.toFixed(0))}\n                </Typography>\n                <Typography className={classes.text} variant=\"h6\" >\n                  In Goods and Services a Year\n                </Typography>\n              </CardContent>\n            </Card>\n          );\n        }\n      }\n    </Consumer>\n  );\n};\n\nexport default withStyles(styles('images/pc.jpg'))(GDPPerCapita);\n","import React from 'react';\nimport { Consumer } from '../../context';\nimport { Typography, Card, CardContent, CardHeader, withStyles } from '@material-ui/core';\nimport styles, { ClassNames } from '../styles';\n\nconst GDPGrowth = ({ classes }:{classes:ClassNames}) => {\n  return (\n    <Consumer>\n      {\n        ({ gdp }) => {\n          const growingBillions = gdp.value * gdp.growthRate / 1e9;\n          const growth = gdp.growthRate * 100;\n          return (\n            <Card className={classes.card} elevation={2} >\n              <CardContent className={classes.content} >\n                <Typography className={classes.text} variant=\"h6\" >\n                  Productivity is Growing By\n                </Typography>\n                  <div>\n                    <Typography color=\"secondary\" variant=\"h2\" >\n                      ${Number(growingBillions.toPrecision(3))}\n                    </Typography>\n                  <div style={{ display:'flex', justifyContent:'center', alignItems:'baseline' }} >\n                    <Typography color=\"secondary\" component=\"span\" variant=\"h4\" >\n                      Billion\n                    </Typography>\n                  </div>\n                </div>\n                    <Typography color=\"secondary\" component=\"span\" variant=\"h4\"\n                    style={{ whiteSpace:'nowrap' }} >\n                    <Typography className={classes.text} variant=\"h6\" style={{ display:'inline' }}>\n                      or&nbsp;\n                    </Typography>\n                    {growth}%\n                    </Typography>\n                <Typography className={classes.text} variant=\"h6\" >\n                  Per Year for the Country\n                </Typography>\n              </CardContent>\n            </Card>\n          );\n        }\n      }\n    </Consumer>\n  );\n};\n\nexport default withStyles(styles('images/growth.jpg'))(GDPGrowth);\n","import React from 'react';\nimport { Consumer } from '../../context';\nimport { Typography, Card, CardContent, CardHeader, withStyles } from '@material-ui/core';\nimport styles, { ClassNames } from '../styles';\n\nconst PerCapitaGrowth = ({ classes }:{classes:ClassNames}) => {\n  return (\n    <Consumer>\n      {\n        ({ gdp, population }) => {\n          const newGDP = gdp.value * (1 + gdp.growthRate);\n          const newPopulation = population.value * (1 + population.growthRate);\n          const perCapita = (gdp.value / population.value);\n          const newPerCapita = (newGDP / newPopulation);\n          const changeInPerCapita = newPerCapita - perCapita;\n          const perCapitaGrowth = changeInPerCapita / perCapita;\n          return (\n            <Card className={classes.card} elevation={2} >\n              <CardContent className={classes.content} >\n                <Typography className={classes.text} variant=\"h6\" >\n                  Individual Productivity is Growing By\n                </Typography>\n                    <Typography color=\"secondary\" variant=\"h1\" >\n                      ${Number(changeInPerCapita.toPrecision(3))}\n                    </Typography>\n                    <Typography color=\"secondary\" component=\"span\" variant=\"h4\"\n                    style={{ whiteSpace:'nowrap' }} >\n                      <Typography\n                        className={classes.text} variant=\"h6\" style={{ display:'inline' }}>\n                        or&nbsp;\n                      </Typography>\n                       {(perCapitaGrowth * 100).toPrecision(2)}%\n                    </Typography>\n                <Typography className={classes.text} variant=\"h6\" >\n                  Per Ugandan, Per Year\n                </Typography>\n              </CardContent>\n            </Card>\n          );\n        }\n      }\n    </Consumer>\n  );\n};\n\nexport default withStyles(styles('images/pcgrowth.jpg'))(PerCapitaGrowth);\n","import React from 'react';\nimport { Consumer } from '../../context';\nimport { Typography, Card, CardContent, CardHeader, withStyles } from '@material-ui/core';\nimport styles, { ClassNames } from '../styles';\n\nconst TimeToMiddleIncome = ({ classes }:{classes:ClassNames}) => {\n  return (\n    <Consumer>\n      {\n        ({ gdp, population, target }) => {\n          const newGDP = gdp.value * (1 + gdp.growthRate);\n          const newPopulation = population.value * (1 + population.growthRate);\n          const perCapita = (gdp.value / population.value);\n          const newPerCapita = (newGDP / newPopulation);\n          const changeInPerCapita = newPerCapita - perCapita;\n          const perCapitaGrowthRate = changeInPerCapita / perCapita;\n          const yearsToMiddleIncome = Math.log(target.perCapitaValue / perCapita) /\n                                      Math.log(1 + perCapitaGrowthRate);\n          return (\n            <Card className={classes.card} elevation={2} >\n              <CardContent className={classes.content} >\n                <Typography className={classes.text} variant=\"h6\" >\n                  With Current Growth Rates It Will Take\n                </Typography>\n                  <div>\n                    <Typography color=\"secondary\" variant=\"h1\" >\n                      {Number(yearsToMiddleIncome.toPrecision(3))}\n                    </Typography>\n                </div>\n                    <Typography color=\"secondary\" component=\"span\" variant=\"h4\"\n                    style={{ whiteSpace:'nowrap' }} >\n                      Years\n                    </Typography>\n                <Typography className={classes.text} variant=\"h6\" >\n                  To Reach <b>{target.label}</b>\n                </Typography>\n              </CardContent>\n            </Card>\n          );\n        }\n      }\n    </Consumer>\n  );\n};\n\nexport default withStyles(styles('images/time.jpg'))(TimeToMiddleIncome);\n","import React from 'react';\nimport { Consumer } from '../../context';\nimport { Typography, Card, CardContent, CardHeader, withStyles } from '@material-ui/core';\nimport styles, { ClassNames } from '../styles';\n\nconst MiddleIncomeNeed = ({ classes }:{classes:ClassNames}) => {\n  return (\n    <Consumer>\n      {\n        ({ gdp, population, target }) => {\n          const middleIncomeGDP = target.perCapitaValue * population.value;\n          const neededForMiddleIncome = middleIncomeGDP - gdp.value;\n          const billions = neededForMiddleIncome / 1e9;\n          return (\n            <Card className={classes.card} elevation={2} >\n              <CardContent className={classes.content} >\n                <Typography className={classes.text} variant=\"h6\" >\n                  Uganda Needs To Increase Production By\n                </Typography>\n                <Typography color=\"secondary\" variant=\"h1\" >\n                ${Number(billions.toPrecision(3))}\n                </Typography>\n                <Typography color=\"secondary\" variant=\"h3\" >\n                  Billion\n                </Typography>\n                <Typography className={classes.text} variant=\"h6\" >\n                  To Reach <b>{target.label}</b>\n                </Typography>\n              </CardContent>\n            </Card>\n          );\n        }\n      }\n    </Consumer>\n  );\n};\n\nexport default withStyles(styles('images/balance.jpg'))(MiddleIncomeNeed);\n","import React, { Fragment } from 'react';\nimport GDP from './gdp';\nimport PerCapita from './per-capita';\nimport GDPGrowth from './gdp-growth';\nimport PerCapitaGrowth from './per-capita-growth';\nimport TimeToMiddleIncome from './time-to-middle-income';\nimport MiddleIncome from './middle-income';\n\nconst styles = {\n  display: 'grid',\n  gridTemplateColumns: 'repeat( auto-fit, minmax(250px, auto) )',\n  gridGap: '8px',\n};\n\nconst Visualizations = () => {\n  return (\n    <Fragment>\n        <GDP/>\n        <PerCapita/>\n        <GDPGrowth/>\n        <PerCapitaGrowth/>\n        <MiddleIncome/>\n        <TimeToMiddleIncome/>\n    </Fragment>\n  );\n};\n\nexport default Visualizations;\n","import React, { Fragment, FormEvent, ChangeEvent } from 'react';\nimport {\n  withStyles,\n  Theme,\n  CardHeader,\n  Card,\n  CardContent,\n  InputAdornment,\n} from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport { ContextType } from '../context/default';\n\nconst styles = (theme: Theme) => ({\n  textField: {\n    margin: theme.spacing.unit,\n    width: 300,\n  },\n  card: {\n    margin: theme.spacing.unit / 2,\n  },\n  formGroup: {\n    display: 'flex',\n    margin: theme.spacing.unit / 2,\n    'flex-wrap': 'wrap',\n  },\n});\n\nconst DataForm = ({\n  classes,\n  setData,\n  data,\n}: {\n  classes: { textField: string; card: string; formGroup: string };\n  setData: Function;\n  data: ContextType;\n}) => {\n  const { gdp, population, update } = data;\n  return (\n    <Fragment>\n      <Card className={classes.card}>\n        <CardHeader title=\"GDP\" />\n        <CardContent>\n          <div className={classes.formGroup}>\n            <TextField\n              variant=\"outlined\"\n              className={classes.textField}\n              label={'GDP'}\n              type=\"number\"\n              id=\"gdp-value-edit\"\n              value={gdp.value / 1e9}\n              InputProps={{\n                endAdornment: <InputAdornment position=\"end\">Billion</InputAdornment>,\n                startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n              }}\n              onChange={(e) => {\n                setData({\n                  ...data,\n                  gdp: {\n                    ...data.gdp,\n                    value: Number(e.target.value) * 1e9,\n                  },\n                });\n              }}\n              // helperText=\"In Billions\"\n            />\n            <TextField\n              variant=\"outlined\"\n              className={classes.textField}\n              label={'Growth Rate'}\n              type=\"number\"\n              id=\"gdp-growth-rate-edit\"\n              value={Number((gdp.growthRate * 100).toPrecision(3))}\n              InputProps={{\n                endAdornment: <InputAdornment position=\"end\">%</InputAdornment>,\n              }}\n              onChange={(e) => {\n                setData({\n                  ...data,\n                  gdp: {\n                    ...data.gdp,\n                    growthRate: Number(e.target.value) / 100,\n                  },\n                });\n              }}\n              // helperText=\"As a Percentage\"\n            />\n          </div>\n        </CardContent>\n      </Card>\n      <Card className={classes.card}>\n        <CardHeader title=\"Population\" />\n        <CardContent>\n          <div className={classes.formGroup}>\n            <TextField\n              variant=\"outlined\"\n              className={classes.textField}\n              label={'Population'}\n              type=\"number\"\n              id=\"population-value-edit\"\n              value={population.value}\n              onChange={(e) => {\n                setData({\n                  ...data,\n                  population: {\n                    ...data.population,\n                    value: Number(e.target.value),\n                  },\n                });\n              }}\n              // helperText=\"In Millions\"\n            />\n            <TextField\n              variant=\"outlined\"\n              className={classes.textField}\n              label={'Growth Rate'}\n              type=\"number\"\n              id=\"population-growth-rate-edit\"\n              value={Number((population.growthRate * 100).toPrecision(3))}\n              InputProps={{\n                endAdornment: <InputAdornment position=\"end\">%</InputAdornment>,\n              }}\n              onChange={(e) => {\n                setData({\n                  ...data,\n                  population: {\n                    ...data.population,\n                    growthRate: Number(e.target.value) / 100,\n                  },\n                });\n              }}\n              // helperText=\"As a Percentage\"\n            />\n          </div>\n        </CardContent>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(DataForm);\n","import React, { Fragment } from 'react';\nimport withState from 'recompose/withState';\nimport Titles from './titles';\nimport Visualizations from './visualizations';\nimport { Provider } from './context';\nimport { defaultContext } from './context/default';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core';\nimport yellow from '@material-ui/core/colors/yellow';\nimport DataForm from './data-form';\n\ninterface State {\n  data: any;\n  setData: Function;\n}\ninterface Props {\n  data: any;\n}\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n  palette: {\n    secondary: {\n      main: yellow['A700'],\n    },\n    type: 'dark',\n  },\n});\n\nconst App = ({ data, setData }: State) => {\n  return (\n    <MuiThemeProvider theme={theme}>\n      <Titles />\n      <div className=\"viz\">\n        <Provider value={{ ...data }}>\n          <Visualizations />\n        </Provider>\n        <DataForm setData={setData} data={data} />\n      </div>\n    </MuiThemeProvider>\n  );\n};\n\nexport default withState('data', 'setData', defaultContext)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}